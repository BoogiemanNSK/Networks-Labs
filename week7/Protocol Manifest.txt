/*
 * ----------------------------------------------------------------------------
 * "THE BEER-WARE LICENSE" (Revision 42):
 * <beluckydaf@gmail.com> wrote this file.  As long as you retain this notice you
 * can do whatever you want with this stuff. If we meet some day, and you think
 * this stuff is worth it, you can buy me a beer in return. Vladislav Smirnov
 * ----------------------------------------------------------------------------
 */

FIRST CONNECTION:
	CLIENT CONNECTED TO SERVER
	SERVER ACCEPTED CONNECTION
	CLIENT: HELO\n<username>\n.\n
	SERVER: <username>\n.\n
	CLIENT: GET_NODE_LIST\n.\n
	SERVER: <username>:<IPv4>:<port>\n<username>:<IPv4>:<port>\n ... \n.\n
	CLIENT: SYNC_FILE_LIST\n<path>:<size>\n<path>:<size>\n ... \n.\n
	SERVER: <path>:<size>\n<path>:<size>\n ... \n.\n
	CLIENT CLOSED CONNECTION
	SERVER CLOSED CONNECTION
	
	// note: port may consist of 1 to 5 digits, name may consist of 1 to 30 characters
	// note: path is relative, size is the number of words in the file (it is supposed that the files are all text files)
	
REQUESTING A FILE:
	CLIENT CONNECTED TO SERVER
	SERVER ACCEPTED CONNECTION
	CLIENT: RETR\n<path>\n.\n
	SERVER: <OK/ERR>\n<size>\n<word>\n ... \n<word>\n<word>\n.\n
	// at this point the client may ask for another file or request the list of files
	// it is useful to update your list when ERR is returned
	CLIENT CLOSED CONNECTION
	SERVER CLOSED CONNECTION
	
	// note: ERR is returned when the path is invalid
	
ADDING A FILE:
	CLIENT CONNECTED TO SERVER
	SERVER ACCEPTED CONNECTION
	CLIENT: ADD_FILE\n<path>:<size>\n.\n
	SERVER: <OK/ERR>\n.\n
	CLIENT CLOSED CONNECTION
	SERVER CLOSED CONNECTION
	
	// note: ERR is given when such file already exists, at this point client must decide something
	
REMOVING A FILE:
	CLIENT CONNECTED TO SERVER
	SERVER ACCEPTED CONNECTION
	CLIENT: REM_FILE\n<path>\n.\n
	SERVER: <OK/ERR>\n.\n
	CLIENT CLOSED CONNECTION
	SERVER CLOSED CONNECTION
	
	// note: server does not remove the file from the disk, it simply moves it to the folder ".unwanted/"
	// to make sure nothing malicious is done
	
NEW NODE CONNECTED:
	CLIENT CONNECTED TO SERVER
	SERVER ACCEPTED CONNECTION
	CLIENT: NEW_NODE\n<name>:<address>:<port>\n.\n
	SERVER: <OK/ERR>\n.\n
	CLIENT CLOSED CONNECTION
	SERVER CLOSED CONNECTION
	
	// note: ERR is given when such node is already known and its name is DIFFERENT
	
PINGING:
	// pinging is done through sending UDP messages
	// message must only contain the word 'ping' for pinging or 'pong' for echoing
	// ping messages must be sent to port 12100
	// pong messages must be sent to the address they have received ping from